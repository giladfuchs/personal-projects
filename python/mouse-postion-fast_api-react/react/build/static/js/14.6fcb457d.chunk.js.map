{"version":3,"sources":["views/secunity-ui/authentication/AuthWrapper1.tsx","views/secunity-ui/authentication/AuthCardWrapper.tsx","ui-component/extended/AnimateButton.tsx","common/hooks/useScriptRef.ts","views/secunity-ui/Form/AuthLoginForm.tsx","ui-component/cards/AuthFooter.tsx","views/secunity-ui/authentication/Login.tsx"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","AuthCardWrapper","children","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","AnimateButton","React","forwardRef","ref","offset1","offset2","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","motion","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","useScriptRef","scripted","useRef","useEffect","current","AuthLoginForm","props","others","useTheme","login","useAuth","scriptedRef","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","username","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","label","mt","Button","color","disabled","variant","AuthFooter","Stack","justifyContent","Typography","component","Link","href","target","underline","Login","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","alignItems","m","mb","spacing","to","Logo","secondary","main","gutterBottom","loginProp","Divider"],"mappings":"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","file":"static/js/14.6fcb457d.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","import React, { Ref } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\nexport type ScaleProps = {\r\n    hover: number | string | undefined;\r\n    tap: number | string | undefined;\r\n};\r\n\r\nexport interface AnimateButtonProps {\r\n    children?: React.ReactNode;\r\n    type?: 'slide' | 'scale' | 'rotate';\r\n    direction?: 'up' | 'down' | 'left' | 'right';\r\n    offset?: number;\r\n    scale?: ScaleProps;\r\n}\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'common/hooks/useAuth';\r\nimport useScriptRef from 'common/hooks/useScriptRef';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===============================|| JWT LOGIN ||=============================== //\r\n\r\nconst AuthLoginForm = (props: { loginProp?: number }, { ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const { login } = useAuth();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    // const [checked, setChecked] = React.useState(true);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent) => {\r\n        event.preventDefault()!;\r\n    };\r\n    const user_pass = { username: '', password: '',}\r\n    // const {loginProp} = props\r\n    // const user_pass = loginProp ===1? { username: 'isp',\r\n    // password: '12345678',}: loginProp ===0?\r\n    // { username: 'tdudu', password: '12345678',}:\r\n    // { username: 'customer', password: '12345678',}\r\n        return (\r\n        <Formik\r\n            initialValues={{\r\n                ...user_pass,\r\n                // username: 'tdudu',\r\n                // password: '12345678',\r\n                // username: 'oshi5',\r\n                // password: '1234',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                username: Yup.string().max(255).required('Email is required'),\r\n                // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await login(values.username, values.password);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err: any) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.username && errors.username)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-login\">Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-login\"\r\n                            type=\"username\"\r\n                            value={values.username}\r\n                            name=\"username\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.username && errors.username && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {errors.username}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-login\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                            label=\"Password\"\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                   \r\n                    {errors.submit && (\r\n                        <Box sx={{ mt: 3 }}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                            <FormattedMessage id=\"login\" />\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AuthLoginForm;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"center\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://flow-sec.com\" target=\"_blank\" underline=\"hover\">\r\n        flow-sec.com\r\n        </Typography>\r\n\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport AuthLogin from '../Form/AuthLoginForm';\nimport Logo from 'ui-component/pages/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n// import useAuth from 'hooks/useAuth';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                  \n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthLogin loginProp={0}/>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    {/* <Grid item xs={12}>\n                                        <AuthLogin loginProp={1}/>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthLogin loginProp={2}/>\n                                    </Grid> */}\n                                \n                         \n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid    xs={12} sx={{ mb: 3  }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;"],"sourceRoot":""}